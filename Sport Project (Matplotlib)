{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2><p style=\"color:red\">Good job, Diana! everything is correct! Just a few notes below</p></h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Total Pay</th>\n",
       "      <th>Salary/Winnings</th>\n",
       "      <th>Endorsements</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Year of birth</th>\n",
       "      <th>Birth Date</th>\n",
       "      <th>Place of Birth</th>\n",
       "      <th>Height (cm)</th>\n",
       "      <th>Wikipedia Page</th>\n",
       "      <th>dbpedia Page</th>\n",
       "      <th>Image</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>55</td>\n",
       "      <td>Aaron Rodgers</td>\n",
       "      <td>Football</td>\n",
       "      <td>$22,000,000</td>\n",
       "      <td>$14,500,000</td>\n",
       "      <td>$7,500,000</td>\n",
       "      <td>United States</td>\n",
       "      <td>Male</td>\n",
       "      <td>1983</td>\n",
       "      <td>2/12/1983</td>\n",
       "      <td>Chico, California, United States</td>\n",
       "      <td>188</td>\n",
       "      <td>http://en.wikipedia.org/wiki/Aaron_Rodgers</td>\n",
       "      <td>dbpedia.org/resource/Aaron_Rodgers</td>\n",
       "      <td>http://commons.wikimedia.org/wiki/Special:File...</td>\n",
       "      <td>Aaron Charles Rodgers (born December 2, 1983) ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>95</td>\n",
       "      <td>Adam Scott</td>\n",
       "      <td>Golf</td>\n",
       "      <td>$17,700,000</td>\n",
       "      <td>$8,700,000</td>\n",
       "      <td>$9,000,000</td>\n",
       "      <td>Australia</td>\n",
       "      <td>Male</td>\n",
       "      <td>1980</td>\n",
       "      <td>16/07/1980</td>\n",
       "      <td>Adelaide, Australia</td>\n",
       "      <td>183</td>\n",
       "      <td>https://en.wikipedia.org/wiki/Adam_Scott_(golfer)</td>\n",
       "      <td>dbpedia.org/resource/Adam_Scott_(golfer)</td>\n",
       "      <td>http://commons.wikimedia.org/wiki/Special:File...</td>\n",
       "      <td>Adam Derek Scott (born 16 July 1980) is an Aus...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>60</td>\n",
       "      <td>Adrian Gonzalez</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>$21,500,000</td>\n",
       "      <td>$21,100,000</td>\n",
       "      <td>$400,000</td>\n",
       "      <td>United States</td>\n",
       "      <td>Male</td>\n",
       "      <td>1982</td>\n",
       "      <td>8/05/1982</td>\n",
       "      <td>San Diego, California, United States</td>\n",
       "      <td>188</td>\n",
       "      <td>http://en.wikipedia.org/wiki/Adrian_Gonzalez</td>\n",
       "      <td>dbpedia.org/resource/Adrian_Gonzalez</td>\n",
       "      <td>http://commons.wikimedia.org/wiki/Special:File...</td>\n",
       "      <td>Adrian Gonzalez (born May 8, 1982), also known...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48</td>\n",
       "      <td>Alex Rodriguez</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>$22,900,000</td>\n",
       "      <td>$22,600,000</td>\n",
       "      <td>$300,000</td>\n",
       "      <td>United States</td>\n",
       "      <td>Male</td>\n",
       "      <td>1975</td>\n",
       "      <td>27/07/1975</td>\n",
       "      <td>New York City</td>\n",
       "      <td>190</td>\n",
       "      <td>http://en.wikipedia.org/wiki/Alex_Rodriguez</td>\n",
       "      <td>dbpedia.org/resource/Alex_Rodriguez</td>\n",
       "      <td>http://commons.wikimedia.org/wiki/Special:File...</td>\n",
       "      <td>Alexander Emmanuel \" Alex \" Rodriguez (born Ju...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>93</td>\n",
       "      <td>Alfonso Soriano</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>$18,050,000</td>\n",
       "      <td>$18,000,000</td>\n",
       "      <td>$50,000</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>Male</td>\n",
       "      <td>1976</td>\n",
       "      <td>7/01/1976</td>\n",
       "      <td>San Pedro de Macorís, Dominican Republic</td>\n",
       "      <td>185</td>\n",
       "      <td>http://en.wikipedia.org/wiki/Alfonso_Soriano</td>\n",
       "      <td>dbpedia.org/resource/Alfonso_Soriano</td>\n",
       "      <td>http://commons.wikimedia.org/wiki/Special:File...</td>\n",
       "      <td>Alfonso Guilleard Soriano (born January 7, 197...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank             Name     Sport    Total Pay Salary/Winnings Endorsements  \\\n",
       "0    55    Aaron Rodgers  Football  $22,000,000     $14,500,000   $7,500,000   \n",
       "1    95       Adam Scott      Golf  $17,700,000      $8,700,000   $9,000,000   \n",
       "2    60  Adrian Gonzalez  Baseball  $21,500,000     $21,100,000     $400,000   \n",
       "3    48   Alex Rodriguez  Baseball  $22,900,000     $22,600,000     $300,000   \n",
       "4    93  Alfonso Soriano  Baseball  $18,050,000     $18,000,000      $50,000   \n",
       "\n",
       "               Nation Gender  Year of birth  Birth Date  \\\n",
       "0       United States   Male           1983   2/12/1983   \n",
       "1           Australia   Male           1980  16/07/1980   \n",
       "2       United States   Male           1982   8/05/1982   \n",
       "3       United States   Male           1975  27/07/1975   \n",
       "4  Dominican Republic   Male           1976   7/01/1976   \n",
       "\n",
       "                             Place of Birth  Height (cm)  \\\n",
       "0          Chico, California, United States          188   \n",
       "1                       Adelaide, Australia          183   \n",
       "2      San Diego, California, United States          188   \n",
       "3                             New York City          190   \n",
       "4  San Pedro de Macorís, Dominican Republic          185   \n",
       "\n",
       "                                      Wikipedia Page  \\\n",
       "0         http://en.wikipedia.org/wiki/Aaron_Rodgers   \n",
       "1  https://en.wikipedia.org/wiki/Adam_Scott_(golfer)   \n",
       "2       http://en.wikipedia.org/wiki/Adrian_Gonzalez   \n",
       "3        http://en.wikipedia.org/wiki/Alex_Rodriguez   \n",
       "4       http://en.wikipedia.org/wiki/Alfonso_Soriano   \n",
       "\n",
       "                               dbpedia Page  \\\n",
       "0        dbpedia.org/resource/Aaron_Rodgers   \n",
       "1  dbpedia.org/resource/Adam_Scott_(golfer)   \n",
       "2      dbpedia.org/resource/Adrian_Gonzalez   \n",
       "3       dbpedia.org/resource/Alex_Rodriguez   \n",
       "4      dbpedia.org/resource/Alfonso_Soriano   \n",
       "\n",
       "                                               Image  \\\n",
       "0  http://commons.wikimedia.org/wiki/Special:File...   \n",
       "1  http://commons.wikimedia.org/wiki/Special:File...   \n",
       "2  http://commons.wikimedia.org/wiki/Special:File...   \n",
       "3  http://commons.wikimedia.org/wiki/Special:File...   \n",
       "4  http://commons.wikimedia.org/wiki/Special:File...   \n",
       "\n",
       "                                         Description  \n",
       "0  Aaron Charles Rodgers (born December 2, 1983) ...  \n",
       "1  Adam Derek Scott (born 16 July 1980) is an Aus...  \n",
       "2  Adrian Gonzalez (born May 8, 1982), also known...  \n",
       "3  Alexander Emmanuel \" Alex \" Rodriguez (born Ju...  \n",
       "4  Alfonso Guilleard Soriano (born January 7, 197...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "athlete=pd.read_csv(\"https://raw.githubusercontent.com/akhadianharnowo/files/main/athlete.csv\")\n",
    "athlete.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Rank</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Height (cm)</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Total Pay</th>\n",
       "      <th>Salary/Winnings</th>\n",
       "      <th>Endorsements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aaron Rodgers</td>\n",
       "      <td>55</td>\n",
       "      <td>Football</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>$22,000,000</td>\n",
       "      <td>$14,500,000</td>\n",
       "      <td>$7,500,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Adam Scott</td>\n",
       "      <td>95</td>\n",
       "      <td>Golf</td>\n",
       "      <td>183</td>\n",
       "      <td>Australia</td>\n",
       "      <td>$17,700,000</td>\n",
       "      <td>$8,700,000</td>\n",
       "      <td>$9,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Adrian Gonzalez</td>\n",
       "      <td>60</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>$21,500,000</td>\n",
       "      <td>$21,100,000</td>\n",
       "      <td>$400,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alex Rodriguez</td>\n",
       "      <td>48</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>190</td>\n",
       "      <td>United States</td>\n",
       "      <td>$22,900,000</td>\n",
       "      <td>$22,600,000</td>\n",
       "      <td>$300,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alfonso Soriano</td>\n",
       "      <td>93</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>185</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>$18,050,000</td>\n",
       "      <td>$18,000,000</td>\n",
       "      <td>$50,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Wayne Rooney</td>\n",
       "      <td>43</td>\n",
       "      <td>Soccer</td>\n",
       "      <td>176</td>\n",
       "      <td>England</td>\n",
       "      <td>$23,400,000</td>\n",
       "      <td>$18,400,000</td>\n",
       "      <td>$5,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Wladimir Klitschko</td>\n",
       "      <td>25</td>\n",
       "      <td>Boxing</td>\n",
       "      <td>198</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>$28,000,000</td>\n",
       "      <td>$24,000,000</td>\n",
       "      <td>$4,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Zach Randolph</td>\n",
       "      <td>84</td>\n",
       "      <td>Basketball</td>\n",
       "      <td>206</td>\n",
       "      <td>United States</td>\n",
       "      <td>$18,800,000</td>\n",
       "      <td>$18,300,000</td>\n",
       "      <td>$500,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Zlatan Ibrahimović</td>\n",
       "      <td>12</td>\n",
       "      <td>Soccer</td>\n",
       "      <td>195</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>$40,400,000</td>\n",
       "      <td>$36,400,000</td>\n",
       "      <td>$4,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Cristiano Ronaldo</td>\n",
       "      <td>2</td>\n",
       "      <td>Soccer</td>\n",
       "      <td>185</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>$80,000,000</td>\n",
       "      <td>$52,000,000</td>\n",
       "      <td>$28,000,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name  Rank       Sport  Height (cm)              Nation  \\\n",
       "0        Aaron Rodgers    55    Football          188       United States   \n",
       "1           Adam Scott    95        Golf          183           Australia   \n",
       "2      Adrian Gonzalez    60    Baseball          188       United States   \n",
       "3       Alex Rodriguez    48    Baseball          190       United States   \n",
       "4      Alfonso Soriano    93    Baseball          185  Dominican Republic   \n",
       "..                 ...   ...         ...          ...                 ...   \n",
       "95        Wayne Rooney    43      Soccer          176             England   \n",
       "96  Wladimir Klitschko    25      Boxing          198             Ukraine   \n",
       "97       Zach Randolph    84  Basketball          206       United States   \n",
       "98  Zlatan Ibrahimović    12      Soccer          195              Sweden   \n",
       "99   Cristiano Ronaldo     2      Soccer          185            Portugal   \n",
       "\n",
       "      Total Pay Salary/Winnings Endorsements  \n",
       "0   $22,000,000     $14,500,000   $7,500,000  \n",
       "1   $17,700,000      $8,700,000   $9,000,000  \n",
       "2   $21,500,000     $21,100,000     $400,000  \n",
       "3   $22,900,000     $22,600,000     $300,000  \n",
       "4   $18,050,000     $18,000,000      $50,000  \n",
       "..          ...             ...          ...  \n",
       "95  $23,400,000     $18,400,000   $5,000,000  \n",
       "96  $28,000,000     $24,000,000   $4,000,000  \n",
       "97  $18,800,000     $18,300,000     $500,000  \n",
       "98  $40,400,000     $36,400,000   $4,000,000  \n",
       "99  $80,000,000     $52,000,000  $28,000,000  \n",
       "\n",
       "[100 rows x 8 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=(athlete[['Name','Rank','Sport','Height (cm)','Nation','Total Pay','Salary/Winnings','Endorsements']])\n",
    "df\n",
    "#Here I  created a new DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Rank</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Height</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Pay</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Endorsements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aaron Rodgers</td>\n",
       "      <td>55</td>\n",
       "      <td>Football</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>$22,000,000</td>\n",
       "      <td>$14,500,000</td>\n",
       "      <td>$7,500,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Adam Scott</td>\n",
       "      <td>95</td>\n",
       "      <td>Golf</td>\n",
       "      <td>183</td>\n",
       "      <td>Australia</td>\n",
       "      <td>$17,700,000</td>\n",
       "      <td>$8,700,000</td>\n",
       "      <td>$9,000,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Adrian Gonzalez</td>\n",
       "      <td>60</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>$21,500,000</td>\n",
       "      <td>$21,100,000</td>\n",
       "      <td>$400,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alex Rodriguez</td>\n",
       "      <td>48</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>190</td>\n",
       "      <td>United States</td>\n",
       "      <td>$22,900,000</td>\n",
       "      <td>$22,600,000</td>\n",
       "      <td>$300,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alfonso Soriano</td>\n",
       "      <td>93</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>185</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>$18,050,000</td>\n",
       "      <td>$18,000,000</td>\n",
       "      <td>$50,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Name  Rank     Sport  Height              Nation          Pay  \\\n",
       "0    Aaron Rodgers    55  Football     188       United States  $22,000,000   \n",
       "1       Adam Scott    95      Golf     183           Australia  $17,700,000   \n",
       "2  Adrian Gonzalez    60  Baseball     188       United States  $21,500,000   \n",
       "3   Alex Rodriguez    48  Baseball     190       United States  $22,900,000   \n",
       "4  Alfonso Soriano    93  Baseball     185  Dominican Republic  $18,050,000   \n",
       "\n",
       "        Salary Endorsements  \n",
       "0  $14,500,000   $7,500,000  \n",
       "1   $8,700,000   $9,000,000  \n",
       "2  $21,100,000     $400,000  \n",
       "3  $22,600,000     $300,000  \n",
       "4  $18,000,000      $50,000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=df.rename(columns={'Height (cm)': 'Height','Total Pay': 'Pay','Salary/Winnings':'Salary'})\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Rank</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Height</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Pay</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Endorsements</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aaron Rodgers</td>\n",
       "      <td>55</td>\n",
       "      <td>Football</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>22000000</td>\n",
       "      <td>14500000</td>\n",
       "      <td>7500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Adam Scott</td>\n",
       "      <td>95</td>\n",
       "      <td>Golf</td>\n",
       "      <td>183</td>\n",
       "      <td>Australia</td>\n",
       "      <td>17700000</td>\n",
       "      <td>8700000</td>\n",
       "      <td>9000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Adrian Gonzalez</td>\n",
       "      <td>60</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>188</td>\n",
       "      <td>United States</td>\n",
       "      <td>21500000</td>\n",
       "      <td>21100000</td>\n",
       "      <td>400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Alex Rodriguez</td>\n",
       "      <td>48</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>190</td>\n",
       "      <td>United States</td>\n",
       "      <td>22900000</td>\n",
       "      <td>22600000</td>\n",
       "      <td>300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Alfonso Soriano</td>\n",
       "      <td>93</td>\n",
       "      <td>Baseball</td>\n",
       "      <td>185</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>18050000</td>\n",
       "      <td>18000000</td>\n",
       "      <td>50000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Name  Rank     Sport  Height              Nation       Pay  \\\n",
       "0    Aaron Rodgers    55  Football     188       United States  22000000   \n",
       "1       Adam Scott    95      Golf     183           Australia  17700000   \n",
       "2  Adrian Gonzalez    60  Baseball     188       United States  21500000   \n",
       "3   Alex Rodriguez    48  Baseball     190       United States  22900000   \n",
       "4  Alfonso Soriano    93  Baseball     185  Dominican Republic  18050000   \n",
       "\n",
       "     Salary Endorsements  \n",
       "0  14500000      7500000  \n",
       "1   8700000      9000000  \n",
       "2  21100000       400000  \n",
       "3  22600000       300000  \n",
       "4  18000000        50000  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Columns=['Pay','Salary','Endorsements']\n",
    "df[Columns] = df[Columns].replace({'\\$':'','\\,': ''}, regex=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3><p style=\"color:red\">Good job doing this in a line of code!</p></h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Pay']=df['Pay'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Salary']=df['Salary'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Name            object\n",
       "Rank             int64\n",
       "Sport           object\n",
       "Height           int64\n",
       "Nation          object\n",
       "Pay              int32\n",
       "Salary           int32\n",
       "Endorsements     int32\n",
       "dtype: object"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Endorsements']=df['Endorsements'].astype(int)\n",
    "df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3><p style=\"color:red\">You can write a line of code that replace three lines above. Just separate the columns by a comma</p></h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sport</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Pay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Football</td>\n",
       "      <td>United States</td>\n",
       "      <td>22000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Golf</td>\n",
       "      <td>Australia</td>\n",
       "      <td>17700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>United States</td>\n",
       "      <td>21500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>United States</td>\n",
       "      <td>22900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>18050000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>England</td>\n",
       "      <td>23400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Boxing</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>28000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Basketball</td>\n",
       "      <td>United States</td>\n",
       "      <td>18800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>40400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>80000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Sport              Nation       Pay\n",
       "0     Football       United States  22000000\n",
       "1         Golf           Australia  17700000\n",
       "2     Baseball       United States  21500000\n",
       "3     Baseball       United States  22900000\n",
       "4     Baseball  Dominican Republic  18050000\n",
       "..         ...                 ...       ...\n",
       "95      Soccer             England  23400000\n",
       "96      Boxing             Ukraine  28000000\n",
       "97  Basketball       United States  18800000\n",
       "98      Soccer              Sweden  40400000\n",
       "99      Soccer            Portugal  80000000\n",
       "\n",
       "[100 rows x 3 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1=(df[['Sport','Nation','Pay']])\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Sport</th>\n",
       "      <th>Nation</th>\n",
       "      <th>Pay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>Dominican Republic</td>\n",
       "      <td>1.991250e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>United States</td>\n",
       "      <td>2.191500e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Baseball</td>\n",
       "      <td>Venezuela</td>\n",
       "      <td>2.260000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Basketball</td>\n",
       "      <td>Germany</td>\n",
       "      <td>2.320000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Basketball</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2.180000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Basketball</td>\n",
       "      <td>United States</td>\n",
       "      <td>3.011875e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Boxing</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>2.100000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Boxing</td>\n",
       "      <td>Philippines</td>\n",
       "      <td>4.180000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Boxing</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>2.800000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Boxing</td>\n",
       "      <td>United States</td>\n",
       "      <td>1.050000e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Cricket</td>\n",
       "      <td>India</td>\n",
       "      <td>3.000000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Football</td>\n",
       "      <td>United States</td>\n",
       "      <td>2.269029e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Golf</td>\n",
       "      <td>Australia</td>\n",
       "      <td>1.770000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Golf</td>\n",
       "      <td>Northern Ireland</td>\n",
       "      <td>2.430000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Golf</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>2.120000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Golf</td>\n",
       "      <td>United States</td>\n",
       "      <td>5.720000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Racing</td>\n",
       "      <td>England</td>\n",
       "      <td>3.200000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Racing</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1.900000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Racing</td>\n",
       "      <td>Spain</td>\n",
       "      <td>3.100000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Racing</td>\n",
       "      <td>United States</td>\n",
       "      <td>2.270000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>4.400000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>3.360000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3.540000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>England</td>\n",
       "      <td>2.105000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>France</td>\n",
       "      <td>1.830000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1.850000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Ivory Coast</td>\n",
       "      <td>2.170000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Netherlands</td>\n",
       "      <td>1.950000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Portugal</td>\n",
       "      <td>8.000000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2.130000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>4.040000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Uruguay</td>\n",
       "      <td>1.730000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Soccer</td>\n",
       "      <td>Wales</td>\n",
       "      <td>3.640000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>China</td>\n",
       "      <td>2.360000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>Russia</td>\n",
       "      <td>2.440000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>Serbia</td>\n",
       "      <td>3.310000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>Spain</td>\n",
       "      <td>4.450000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>Switzerland</td>\n",
       "      <td>5.620000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Tennis</td>\n",
       "      <td>United States</td>\n",
       "      <td>2.200000e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Track</td>\n",
       "      <td>Jamaica</td>\n",
       "      <td>2.320000e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Sport              Nation           Pay\n",
       "0     Baseball  Dominican Republic  1.991250e+07\n",
       "1     Baseball       United States  2.191500e+07\n",
       "2     Baseball           Venezuela  2.260000e+07\n",
       "3   Basketball             Germany  2.320000e+07\n",
       "4   Basketball               Spain  2.180000e+07\n",
       "5   Basketball       United States  3.011875e+07\n",
       "6       Boxing              Mexico  2.100000e+07\n",
       "7       Boxing         Philippines  4.180000e+07\n",
       "8       Boxing             Ukraine  2.800000e+07\n",
       "9       Boxing       United States  1.050000e+08\n",
       "10     Cricket               India  3.000000e+07\n",
       "11    Football       United States  2.269029e+07\n",
       "12        Golf           Australia  1.770000e+07\n",
       "13        Golf    Northern Ireland  2.430000e+07\n",
       "14        Golf              Sweden  2.120000e+07\n",
       "15        Golf       United States  5.720000e+07\n",
       "16      Racing             England  3.200000e+07\n",
       "17      Racing             Germany  1.900000e+07\n",
       "18      Racing               Spain  3.100000e+07\n",
       "19      Racing       United States  2.270000e+07\n",
       "20      Soccer           Argentina  4.400000e+07\n",
       "21      Soccer              Brazil  3.360000e+07\n",
       "22      Soccer            Colombia  3.540000e+07\n",
       "23      Soccer             England  2.105000e+07\n",
       "24      Soccer              France  1.830000e+07\n",
       "25      Soccer             Germany  1.850000e+07\n",
       "26      Soccer         Ivory Coast  2.170000e+07\n",
       "27      Soccer         Netherlands  1.950000e+07\n",
       "28      Soccer            Portugal  8.000000e+07\n",
       "29      Soccer               Spain  2.130000e+07\n",
       "30      Soccer              Sweden  4.040000e+07\n",
       "31      Soccer             Uruguay  1.730000e+07\n",
       "32      Soccer               Wales  3.640000e+07\n",
       "33      Tennis               China  2.360000e+07\n",
       "34      Tennis              Russia  2.440000e+07\n",
       "35      Tennis              Serbia  3.310000e+07\n",
       "36      Tennis               Spain  4.450000e+07\n",
       "37      Tennis         Switzerland  5.620000e+07\n",
       "38      Tennis       United States  2.200000e+07\n",
       "39       Track             Jamaica  2.320000e+07"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "group = df1.groupby(['Sport','Nation'], as_index=False).mean()\n",
    "group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"10\" halign=\"left\">Pay</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sport</th>\n",
       "      <th>Baseball</th>\n",
       "      <th>Basketball</th>\n",
       "      <th>Boxing</th>\n",
       "      <th>Cricket</th>\n",
       "      <th>Football</th>\n",
       "      <th>Golf</th>\n",
       "      <th>Racing</th>\n",
       "      <th>Soccer</th>\n",
       "      <th>Tennis</th>\n",
       "      <th>Track</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nation</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Argentina</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Australia</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17700000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Brazil</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33600000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>China</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23600000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Colombia</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>35400000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dominican Republic</th>\n",
       "      <td>19912500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>England</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32000000.0</td>\n",
       "      <td>21050000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>France</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18300000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Germany</th>\n",
       "      <td>NaN</td>\n",
       "      <td>23200000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19000000.0</td>\n",
       "      <td>18500000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>India</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ivory Coast</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21700000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jamaica</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23200000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mexico</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Netherlands</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19500000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northern Ireland</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24300000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Philippines</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41800000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portugal</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>80000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Russia</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>24400000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Serbia</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33100000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spain</th>\n",
       "      <td>NaN</td>\n",
       "      <td>21800000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31000000.0</td>\n",
       "      <td>21300000.0</td>\n",
       "      <td>44500000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sweden</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21200000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>40400000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Switzerland</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>56200000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ukraine</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>United States</th>\n",
       "      <td>21915000.0</td>\n",
       "      <td>30118750.0</td>\n",
       "      <td>105000000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.269029e+07</td>\n",
       "      <td>57200000.0</td>\n",
       "      <td>22700000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22000000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Uruguay</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17300000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Venezuela</th>\n",
       "      <td>22600000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wales</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36400000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Pay                                       \\\n",
       "Sport                 Baseball  Basketball       Boxing     Cricket   \n",
       "Nation                                                                \n",
       "Argentina                  NaN         NaN          NaN         NaN   \n",
       "Australia                  NaN         NaN          NaN         NaN   \n",
       "Brazil                     NaN         NaN          NaN         NaN   \n",
       "China                      NaN         NaN          NaN         NaN   \n",
       "Colombia                   NaN         NaN          NaN         NaN   \n",
       "Dominican Republic  19912500.0         NaN          NaN         NaN   \n",
       "England                    NaN         NaN          NaN         NaN   \n",
       "France                     NaN         NaN          NaN         NaN   \n",
       "Germany                    NaN  23200000.0          NaN         NaN   \n",
       "India                      NaN         NaN          NaN  30000000.0   \n",
       "Ivory Coast                NaN         NaN          NaN         NaN   \n",
       "Jamaica                    NaN         NaN          NaN         NaN   \n",
       "Mexico                     NaN         NaN   21000000.0         NaN   \n",
       "Netherlands                NaN         NaN          NaN         NaN   \n",
       "Northern Ireland           NaN         NaN          NaN         NaN   \n",
       "Philippines                NaN         NaN   41800000.0         NaN   \n",
       "Portugal                   NaN         NaN          NaN         NaN   \n",
       "Russia                     NaN         NaN          NaN         NaN   \n",
       "Serbia                     NaN         NaN          NaN         NaN   \n",
       "Spain                      NaN  21800000.0          NaN         NaN   \n",
       "Sweden                     NaN         NaN          NaN         NaN   \n",
       "Switzerland                NaN         NaN          NaN         NaN   \n",
       "Ukraine                    NaN         NaN   28000000.0         NaN   \n",
       "United States       21915000.0  30118750.0  105000000.0         NaN   \n",
       "Uruguay                    NaN         NaN          NaN         NaN   \n",
       "Venezuela           22600000.0         NaN          NaN         NaN   \n",
       "Wales                      NaN         NaN          NaN         NaN   \n",
       "\n",
       "                                                                      \\\n",
       "Sport                   Football        Golf      Racing      Soccer   \n",
       "Nation                                                                 \n",
       "Argentina                    NaN         NaN         NaN  44000000.0   \n",
       "Australia                    NaN  17700000.0         NaN         NaN   \n",
       "Brazil                       NaN         NaN         NaN  33600000.0   \n",
       "China                        NaN         NaN         NaN         NaN   \n",
       "Colombia                     NaN         NaN         NaN  35400000.0   \n",
       "Dominican Republic           NaN         NaN         NaN         NaN   \n",
       "England                      NaN         NaN  32000000.0  21050000.0   \n",
       "France                       NaN         NaN         NaN  18300000.0   \n",
       "Germany                      NaN         NaN  19000000.0  18500000.0   \n",
       "India                        NaN         NaN         NaN         NaN   \n",
       "Ivory Coast                  NaN         NaN         NaN  21700000.0   \n",
       "Jamaica                      NaN         NaN         NaN         NaN   \n",
       "Mexico                       NaN         NaN         NaN         NaN   \n",
       "Netherlands                  NaN         NaN         NaN  19500000.0   \n",
       "Northern Ireland             NaN  24300000.0         NaN         NaN   \n",
       "Philippines                  NaN         NaN         NaN         NaN   \n",
       "Portugal                     NaN         NaN         NaN  80000000.0   \n",
       "Russia                       NaN         NaN         NaN         NaN   \n",
       "Serbia                       NaN         NaN         NaN         NaN   \n",
       "Spain                        NaN         NaN  31000000.0  21300000.0   \n",
       "Sweden                       NaN  21200000.0         NaN  40400000.0   \n",
       "Switzerland                  NaN         NaN         NaN         NaN   \n",
       "Ukraine                      NaN         NaN         NaN         NaN   \n",
       "United States       2.269029e+07  57200000.0  22700000.0         NaN   \n",
       "Uruguay                      NaN         NaN         NaN  17300000.0   \n",
       "Venezuela                    NaN         NaN         NaN         NaN   \n",
       "Wales                        NaN         NaN         NaN  36400000.0   \n",
       "\n",
       "                                            \n",
       "Sport                   Tennis       Track  \n",
       "Nation                                      \n",
       "Argentina                  NaN         NaN  \n",
       "Australia                  NaN         NaN  \n",
       "Brazil                     NaN         NaN  \n",
       "China               23600000.0         NaN  \n",
       "Colombia                   NaN         NaN  \n",
       "Dominican Republic         NaN         NaN  \n",
       "England                    NaN         NaN  \n",
       "France                     NaN         NaN  \n",
       "Germany                    NaN         NaN  \n",
       "India                      NaN         NaN  \n",
       "Ivory Coast                NaN         NaN  \n",
       "Jamaica                    NaN  23200000.0  \n",
       "Mexico                     NaN         NaN  \n",
       "Netherlands                NaN         NaN  \n",
       "Northern Ireland           NaN         NaN  \n",
       "Philippines                NaN         NaN  \n",
       "Portugal                   NaN         NaN  \n",
       "Russia              24400000.0         NaN  \n",
       "Serbia              33100000.0         NaN  \n",
       "Spain               44500000.0         NaN  \n",
       "Sweden                     NaN         NaN  \n",
       "Switzerland         56200000.0         NaN  \n",
       "Ukraine                    NaN         NaN  \n",
       "United States       22000000.0         NaN  \n",
       "Uruguay                    NaN         NaN  \n",
       "Venezuela                  NaN         NaN  \n",
       "Wales                      NaN         NaN  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "group_pivot=group.pivot(index='Nation', columns='Sport')\n",
    "group_pivot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "plt.pcolor(group_pivot, cmap='RdBu')\n",
    "plt.colorbar()\n",
    "plt.show()\n",
    "#Created a heatmap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "fig, ax = plt.subplots(figsize=(10,7))\n",
    "im = ax.pcolor(group_pivot, cmap='RdBu')\n",
    "#label names\n",
    "row_labels = group_pivot.columns.levels[1]\n",
    "col_labels = group_pivot.index\n",
    "#move ticks and labels to the center\n",
    "ax.set_xticks(np.arange(group_pivot.shape[1]) + 0.5, minor=False)\n",
    "ax.set_yticks(np.arange(group_pivot.shape[0]) + 0.5, minor=False)\n",
    "#insert labels\n",
    "ax.set_xticklabels(row_labels, minor=False)\n",
    "ax.set_yticklabels(col_labels, minor=False)\n",
    "#rotate label if too long\n",
    "plt.xticks(rotation=90)\n",
    "fig.colorbar(im)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv(\"df.csv\", encoding='utf-8', index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
